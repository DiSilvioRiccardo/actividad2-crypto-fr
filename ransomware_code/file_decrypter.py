import os
from Crypto.Cipher import AES
from Crypto import Random
from Crypto.Hash import SHA256
from Crypto.Util.Padding import pad, unpad

def decrypt(key, filename):
	chunksize = 64*1024
	outputFile = filename[:-4]+'d'

	with open(filename, 'rb') as infile:
		filesize = int(infile.read(16))
		IV = infile.read(16)

		decryptor= AES.new(key, AES.MODE_CBC, IV)

		with open(outputFile, 'wb') as outfile:
			while True:
				chunk = infile.read(chunksize)

				if len(chunk) == 0:
					break

				outfile.write(decryptor.decrypt(chunk))

			outfile.truncate(filesize)


def getKey(password):
	hasher = SHA256.new(password.encode('utf-8'))
	return hasher.digest()

def decryptFiles(x, files):
    os.chdir("./important_files")
    for file in files:
        decrypt(getKey(x), file)

#Llenar este codigo para decriptar sus archivos, dejo un ejemplo
files = ["prod_db_password.txt.enc", "prod_server_ssh_key.pem.enc"]
x = "103868533248929724454312067560551355331377239600252441897790587516492830879824958339232982803144442686601765956173351834745891478255947008254223431642797941235839111517167966605785387155282673782768836706812394633559959392280748111401967371233187766120162830066375322745710780535987363350971359865474269676356886555550678457253022792731930037218038900371369155268109806811183986457526724756067550117967699458954888020102965670032844141322180477745209452524217416370858632956417814343452959300168205435650857061911787238854300445044267049699409217727615181139579603406549663838028048230311681883635552512026613067084057482099542682635511558112624618107495674220669503925176969499650268972839024705914193552788189123992002543325477104290049323520944397504469794048923566419504681189033775429122211066630193382321079572809005818402826757673871226707824001572850188244137964130688827938241252037133002185807891185540360139617126466630915976863666569143152310922115417836587195109465391455377190635567986433731868287387062821676365615673715430957621145187899210464293259702047633799428443456453490496792333809269464286731627985150897839412006940127560874044831211173402882750901845801444781862217035922554017102649707915490910541210282976"
decryptFiles(x, files)

    