import os
from Crypto.Cipher import AES
from Crypto import Random
from Crypto.Hash import SHA256
from Crypto.Util.Padding import pad, unpad

def decrypt(key, filename):
	chunksize = 64*1024
	outputFile = filename[:-4]+'d'

	with open(filename, 'rb') as infile:
		filesize = int(infile.read(16))
		IV = infile.read(16)

		decryptor= AES.new(key, AES.MODE_CBC, IV)

		with open(outputFile, 'wb') as outfile:
			while True:
				chunk = infile.read(chunksize)

				if len(chunk) == 0:
					break

				outfile.write(decryptor.decrypt(chunk))

			outfile.truncate(filesize)


def getKey(password):
	hasher = SHA256.new(password.encode('utf-8'))
	return hasher.digest()

def decryptFiles(x, files):
    os.chdir("./important_files")
    for file in files:
        decrypt(getKey(x), file)
#Llenar este codigo para decriptar sus archivos, dejo un ejemplo
#files = ["prod_db_password.txt.enc", "prod_server_ssh_key.pem.enc"]
#x = "41708923087501967273140512496271517896318961578994887105005340007248127170860008981941516664766299849004043240536179219189233273864294121695549887518994430757807952605829899052530849487273603167608676750473399620175229018846416323608367454409219655079370718789112278866052525953186430803667239114325234544090845509049610162262123483632296853167244412466086570489213768176151360639722150833487062520759019544489033640094654731245543202079412846583661353082466531822364960176060943101244623480824239260222585354194535596538926334460703566401009909907589869036230496251735284535948630847626100719196368771402812542049557723119456059416158308427268751055662522160203833198732127993741967136633888174106172708885667754937137479055227568691448102283456970092371741486050595617132117822322068535252141550638587391901222128020430025616672856086000171069422035810114488253594518808662397960605337694652990183553562175735944330143589351244782726556767437232786265112264352141862258785785047597933062056194187708301000378427740276308881454235995012920214506471588062476450261576415271502214352330842612994733697887266462175304552661764126128967922763570481213864475089269234923978816424925956374085874932287946603239986993943905015564205606152"
#decryptFiles(x, files)

    